# API de Usuario

Esta API permite realizar operaciones CRUD (Crear, Leer, Actualizar, Eliminar) en un recurso de usuario.

## Endpoints

- `GET /users`: Obtiene una lista de todos los usuarios.
- `GET /users/{userUid}`: Obtiene los detalles de un usuario específico.
- `POST /users`: Crea un nuevo usuario.
- `PUT /users/{userUid}`: Actualiza los detalles de un usuario existente.
- `DELETE /users/{userUid}`: Elimina un usuario existente.

## Detalles de los Endpoints

### GET /users

Devuelve una lista de todos los usuarios.

### GET /users/{userUid}

Devuelve los detalles de un usuario específico.

Parámetros de ruta:
- `userUid`: El UUID del usuario.

### POST /users

Crea un nuevo usuario.

Cuerpo de la solicitud:
```json
{
    "firstName": "Nombre",
    "lastName": "Apellido",
    "gender": "MALE",
    "age": 22,
    "email": "test.user@example.com"
}
```

### PUT /users/{userUid}

Actualiza los detalles de un usuario existente.

Parámetros de ruta:
- `userUid`: El UUID del usuario.

Cuerpo de la solicitud:
```json
{
    "firstName": "Nombre",
    "lastName": "Apellido",
    "gender": "MALE",
    "age": 22,
    "email": "test.user@example.com"
}
```

### DELETE /users/{userUid}

Elimina un usuario existente.

Parámetros de ruta:
- `userUid`: El UUID del usuario.

## Ejecución de pruebas

Para ejecutar las pruebas unitarias, ejecute el siguiente comando en su terminal:

```bash
./mvnw test
```

## Construcción y ejecución

Para construir y ejecutar la aplicación, ejecute el siguiente comando en su terminal:

```bash
./mvnw spring-boot:run
```

Esto iniciará la aplicación en `localhost:8080`.

## Contacto

Si tiene alguna pregunta o problema, no dude en abrir un problema en GitHub.